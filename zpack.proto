message ZPack{
	optional bytes opcode = 1; //001:lookup, 002:remove, 003:insert, 004:append, 005:compare_swap
	optional bytes key = 2;
	optional bytes val = 3;
	optional bytes newval = 4; //used by compare_swap
	optional bytes lease = 5; //used by state_changed_callback
	optional bool valnull = 6;	
	optional bool newvalnull = 7; //used by compare_swap
	optional int32 replicanum = 8;		
	
	

	//Tony: added for zht-h
	//zht-h: 0:single request and return, 1:batch request, 2:batch return
	optional bytes client_ip = 9; //used by OHT
    optional int32 client_port = 10; //used by OHT
    optional int64 seq_num = 11; //used by OHT
	optional int32 qos_latency = 12; //The longest time this request can wait
    optional Consistency_level consistency = 13;

	optional double batch_response_time = 14;//the time stamp when the response back to client.
	optional double batch_start_time = 15;//the time stamp when the batch collect the 1st item.
	
	optional Pack_type pack_type = 16 [default = SINGLE];
	repeated BatchItem batch_item = 17;


    enum Consistency_level{
		STRONG = 0;
		WEAK = 1;
    	EVENTUAL = 2;
	}
	
	enum Pack_type{
		SINGLE = 1;
		BATCH_REQ = 2;
		BATCH_RET = 3;
	}
	
	//Tony: end.
}

message BatchItem{
    optional bytes client_ip = 1; 
    optional int32 client_port = 2; 
    optional int64 seq_num = 3; //used by OHT
    optional bytes opcode =4 ;
	optional bytes key = 5;
    optional bytes val = 6;
	optional int32 qos_latency = 7; //The longest time this request can wait
	optional Consistency_level consistency = 8;
	
	optional double submit_time = 9;
	optional double respon_time = 10;

	enum Consistency_level{
		STRONG = 1;
		WEAK = 2;
		EVENTUAL = 3;
	}

}
